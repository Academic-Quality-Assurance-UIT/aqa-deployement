services:
  frontend:
    image: hoanghy/aqa-client:latest
    depends_on:
      - backend
    ports:
      - "3000:3000"
    env_file:
      - .env

  backend:
    image: hoanghy/aqa-backend-nestjs:latest
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USERNAME: postgres
      DB_PASSWORD: jnhbgvfc
      DB_DATABASE: aqa
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    ports:
      - "8000:8000"
    env_file:
      - .env


  jenkins:
    build: 
      context: . 
      dockerfile: Jenkins.Dockerfile   
    user: root              
    privileged: false   
    container_name: jenkins
    volumes:
      - "jenkins_home:/var/jenkins_home"
      - ".:/opt/aqa-deployment"
      - "/var/run/docker.sock:/var/run/docker.sock" 
      - ./jenkins/jenkins.yaml:/var/jenkins_home/casc_configs/jenkins.yaml
    environment:
      - DOCKER_HOST=unix:///var/run/docker.sock
    restart: unless-stopped
    ports:
      - "8080:8080"
      - "50000:50000"

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"

  postgres:
    image: postgres:14-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: jnhbgvfc
      POSTGRES_DB: aqa
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3001:3000"

  cadvisor:
    image: google/cadvisor:latest
    ports:
      - "8081:8080"
    volumes:
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro

  nginx:
    image: nginx:alpine
    ports:
      - "81:80"
      - "443:443"
    depends_on:
      - frontend
      - backend

volumes:
  postgres_data: {}
  jenkins_home: {}
